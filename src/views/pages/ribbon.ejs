<%
var data
%>
<div class="slider container">
    <div class="main">
        <div class="containerr">

            <h1 class="title"> <%= (langue? langue["Ribbon"] : "Ribbon") %> </h1>
        </div>
        <div id="swiper"></div>
        <br>
        <br>
        <button id="button-like" class="like"><%= (langue? langue["Like"] : "Like") %></button>
    </div>
</div>
<script src="/js/card.js"></script>
<script src="/js/ribbon.js"></script>

<script>
    let userIds = []
    // DOM
    const swiperDiv = document.querySelector('#swiper')

    let cardCount = 0

    // functions

    async function appendNewCard() {
        let userId = userIds.pop()
        if(userId) {
            let user = await (await fetch("/api/user/" + userId, {
                method: "GET",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json;charset=UTF-8",
                },
            })).json()
            const card = new Card(
                appendNewCard,
                user
            )

            swiperDiv.append(card.element)
            cardCount++
        }
        const cards = swiperDiv.querySelectorAll('.card:not(.dismissing)')
        cards.forEach((card, index) => {
            card.style.setProperty('--i', index)
        })
    }

    fetch("/api/ribbon", {
        method: "GET",
        headers: {
            Accept: "application/json",
            "Content-Type": "application/json;charset=UTF-8",
        },
    }).then(async (data) => {
        userIds.push(...(await data.json()))
        console.log(userIds)
        for (let i = 0; i < 5; i++) {
            appendNewCard();
        }
    })


    const onClickFunc = (id) => {
        const card = document.getElementById(id)
        card.style.transition = 'transform 0.5s'
        card.style.transform = `
            translate(
                ${290}px,
                ${-window.innerHeight}px
                )
            rotate(${90}deg)
            `
        card.classList.add('dismissing')
        setTimeout(() => {
            card.remove()

        }, 500)

        appendNewCard()

        console.log(card)
    }
    const action = async (e) => {

        let topUser = swiperDiv.firstElementChild.id;

        let data = await fetch("/api/like/add", {
            method: "POST",
            body: JSON.stringify({userId: topUser}),
            headers: {
                Accept: "application/json",
                "Content-Type": "application/json;charset=UTF-8",
            },
        })
        await sleep(1000);
        if (data.status === 201)
            onClickFunc(topUser)
        else alert("error on "+data.status+" \"/api/like/add\"")
    }
    document.querySelector(".like").addEventListener("click", action);
</script>